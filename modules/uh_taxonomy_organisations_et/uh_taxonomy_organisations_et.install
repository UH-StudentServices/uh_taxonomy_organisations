<?php
/**
 * @file
 * This is installation module file for "University of Helsinki, Organisations
 * ET" module.
 *
 * @license GPL, or GNU General Public License, version 3
 * @license http://opensource.org/licenses/GPL-3.0
 * @see README.md how to contribute to this project
 */

/**
 * Implements hook_install().
 */
function uh_taxonomy_organisations_et_install() {
  $entity_type = 'taxonomy_term';
  $bundle = 'organisations_of_university_of_helsinki';
  if (title_field_replacement_toggle($entity_type, $bundle, 'name')) {
    // When replacing taxonomy name with title field, it needs to process all
    // existing entities and invoke proper hooks to properly process its values.
    // @see title_field_replacement_form_submit()
    // @see title_field_replacement_init()
    $vocabulary = taxonomy_vocabulary_machine_name_load($bundle);
    $terms = taxonomy_term_load_multiple(array(), array('vid' => $vocabulary->vid));
    foreach ($terms as $term) {
      field_attach_presave($entity_type, $term);
      field_attach_update($entity_type, $term);
    }
  }

  // Ensure that we have entity translation enabled on taxonomy_terms
  $enabled_types = variable_get('entity_translation_entity_types', array());
  if (empty($enabled_types['taxonomy_term'])) {
    $enabled_types['taxonomy_term'] = 'taxonomy_term';
    variable_set('entity_translation_entity_types', $enabled_types);
  }
}

/**
 * Implements hook_uninstall().
 */
function uh_taxonomy_organisations_et_uninstall() {
  // Toggle replacement. When FALSE is returned, it means that replacement has
  // been removed.
  $entity_type = 'taxonomy_term';
  $bundle = 'organisations_of_university_of_helsinki';
  if (title_field_replacement_toggle($entity_type, $bundle, 'name') === FALSE) {
    // TODO: We assume here that we've no alterations done on default field
    // table naming.
    db_delete('field_data_name_field')
      ->condition('entity_type', $entity_type)
      ->condition('bundle', $bundle)
      ->execute();
    db_delete('field_revision_name_field')
      ->condition('entity_type', $entity_type)
      ->condition('bundle', $bundle)
      ->execute();
    field_cache_clear();
  }
}
